/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/users/getById': {
    get: operations['UsersController_getById'];
  };
  '/users/editProfile': {
    post: operations['UsersController_editProfile'];
  };
  '/users/setSettings': {
    post: operations['UsersController_setSettings'];
  };
  '/projects/getAll': {
    get: operations['ProjectsController_getAll'];
  };
  '/projects/getById': {
    get: operations['ProjectsController_getById'];
  };
  '/projects/create': {
    post: operations['ProjectsController_create'];
  };
  '/projects/edit': {
    post: operations['ProjectsController_edit'];
  };
  '/projects/done': {
    post: operations['ProjectsController_done'];
  };
  '/projects/close': {
    post: operations['ProjectsController_close'];
  };
  '/responses/getMe': {
    get: operations['ResponsesController_getMe'];
  };
  '/responses/create': {
    post: operations['ResponsesController_create'];
  };
  '/responses/edit': {
    post: operations['ResponsesController_edit'];
  };
  '/responses/close': {
    post: operations['ResponsesController_close'];
  };
  '/responses/setExecutor': {
    post: operations['ResponsesController_setExecutor'];
  };
  '/comments/getAll': {
    get: operations['CommentsController_getAll'];
  };
  '/comments/create': {
    post: operations['CommentsController_create'];
  };
  '/comments/edit': {
    post: operations['CommentsController_edit'];
  };
  '/comments/delete': {
    post: operations['CommentsController_delete'];
  };
  '/utils/listCategories': {
    get: operations['UtilsController_listCategories'];
  };
  '/admin/test': {
    get: operations['AdminController_test'];
  };
}

export interface components {
  schemas: {
    VKInfoDto: {
      id: number;
      verified: boolean;
      fullName: string;
      avatarUrl: string;
    };
    Notification: {
      id: number;
      title: string;
      text: string;
      icon: string;
      hash?: string;
      date: string;
    };
    UserReport: {
      id: number;
      user: components['schemas']['User'];
      comment: string;
      date: string;
      from: components['schemas']['User'];
    };
    Settings: {
      push: boolean;
      im: boolean;
    };
    User: {
      vk: components['schemas']['VKInfoDto'];
      id: number;
      role: number;
      category: number;
      description: string;
      rights: number;
      rating: number;
      registration: string;
      ref: string;
      projects?: components['schemas']['Project'][];
      executable?: components['schemas']['Project'][];
      notifications?: components['schemas']['Notification'][];
      reports?: components['schemas']['UserReport'][];
      settings?: components['schemas']['Settings'];
    };
    Attachment: {
      id: number;
      type: string;
      link: string;
    };
    Comment: {
      id: number;
      user: components['schemas']['User'];
      date: string;
      text: string;
    };
    Project: {
      id: number;
      user: components['schemas']['User'];
      executor: components['schemas']['User'];
      category: number;
      price: number;
      date: string;
      header: string;
      description: string;
      text: string;
      status: string;
      pinned: boolean;
      editionDates: string[];
      views: number;
      attachments: components['schemas']['Attachment'][];
      responses: string[];
      comments: components['schemas']['Comment'][];
    };
    EditProfileDto: {
      role: number;
      category: number;
      description: string;
    };
    SetSettingsDto: {
      push: boolean;
      im: boolean;
    };
    CreateProjectDto: {
      category: number;
      price: number;
      header: string;
      description: string;
      text: string;
      attachments: components['schemas']['Attachment'][];
    };
    EditProjectDto: {
      category?: number;
      price?: number;
      header?: string;
      description?: string;
      text?: string;
      attachments?: components['schemas']['Attachment'][];
      id: number;
    };
    Response: {
      id: number;
      user: components['schemas']['User'];
      days: number;
      price: number;
      text: string;
      date: string;
      closed: boolean;
      pinned: boolean;
    };
    CreateResponseDto: {
      days: number;
      price: number;
      text: string;
      projectId: number;
    };
    EditResponseDto: {
      days?: number;
      price?: number;
      text?: string;
      projectId?: number;
    };
    CloseResponseDto: {
      projectId: number;
    };
    SetExecutorDto: {
      projectId: number;
      responseId: number;
    };
    CreateCommentDto: {
      text: string;
      projectId: number;
    };
    EditCommentDto: {
      text?: string;
      projectId?: number;
      id: number;
    };
    DeleteCommentDto: {
      projectId: number;
      id: number;
    };
  };
}

export interface operations {
  UsersController_getById: {
    parameters: {
      query: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['User'];
        };
      };
      404: unknown;
    };
  };
  UsersController_editProfile: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['User'];
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['EditProfileDto'];
      };
    };
  };
  UsersController_setSettings: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['User'];
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['SetSettingsDto'];
      };
    };
  };
  ProjectsController_getAll: {
    parameters: {
      query: {
        startDate: string;
        offset: number;
        category: number;
        lessResponses: boolean;
        withoutExecutor: boolean;
        priceMin: number;
        priceMax: number;
        searchQuery?: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['Project'][];
        };
      };
    };
  };
  ProjectsController_getById: {
    parameters: {
      query: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['Project'];
        };
      };
      404: unknown;
    };
  };
  ProjectsController_create: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Project'];
        };
      };
      400: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateProjectDto'];
      };
    };
  };
  ProjectsController_edit: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Project'];
        };
      };
      400: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['EditProjectDto'];
      };
    };
  };
  ProjectsController_done: {
    parameters: {
      query: {
        id: number;
      };
    };
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Project'];
        };
      };
      400: unknown;
    };
  };
  ProjectsController_close: {
    parameters: {
      query: {
        id: number;
      };
    };
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Project'];
        };
      };
      400: unknown;
    };
  };
  ResponsesController_getMe: {
    parameters: {
      query: {
        projectId: number;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
      404: unknown;
    };
  };
  ResponsesController_create: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
      400: unknown;
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateResponseDto'];
      };
    };
  };
  ResponsesController_edit: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
      400: unknown;
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['EditResponseDto'];
      };
    };
  };
  ResponsesController_close: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
      400: unknown;
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['CloseResponseDto'];
      };
    };
  };
  ResponsesController_setExecutor: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Project'];
        };
      };
      400: unknown;
      403: unknown;
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['SetExecutorDto'];
      };
    };
  };
  CommentsController_getAll: {
    parameters: {
      query: {
        projectId: number;
        offset: number;
        startDate: string;
      };
    };
    responses: {
      200: {
        content: {
          'application/json': components['schemas']['Comment'][];
        };
      };
      404: unknown;
    };
  };
  CommentsController_create: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Comment'];
        };
      };
      400: unknown;
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateCommentDto'];
      };
    };
  };
  CommentsController_edit: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Comment'];
        };
      };
      400: unknown;
      403: unknown;
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['EditCommentDto'];
      };
    };
  };
  CommentsController_delete: {
    parameters: {};
    responses: {
      201: {
        content: {
          'application/json': components['schemas']['Comment'];
        };
      };
      400: unknown;
      403: unknown;
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['DeleteCommentDto'];
      };
    };
  };
  UtilsController_listCategories: {
    parameters: {};
    responses: {
      200: {
        content: {
          'application/json': string[];
        };
      };
    };
  };
  AdminController_test: {
    parameters: {};
    responses: {
      200: unknown;
    };
  };
}

export interface external {}
